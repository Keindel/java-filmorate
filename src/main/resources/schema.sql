drop table if exists mpa, film_genre_coupling, genre_names, likes
    , friends, friendship_status, films, users;

create table if not exists Mpa (
    id int primary key,
    name varchar(10)
    );

create table if not exists genre_names
(
    genre_id   int primary key,
    genre_name varchar(30)
);

create table if not exists friendship_status
(
    status_id   int primary key,
    status_name varchar(30)
);

create table if not exists users
(
    user_id  int generated by default as identity primary key,
    email    varchar(50) unique,
    login    varchar(30),
    name     varchar(30),
    birthday date
);

create table if not exists films
(
    film_id      int generated by default as identity primary key,
    name         varchar(50)  not null,
    description  varchar(200) not null,
    release_date date         not null,
    duration     int CHECK (duration > 1),
    mpa_id       int references Mpa(id)
);

create table if not exists friends
(
    friendship_id        int generated by default as identity primary key,
    user_id              int REFERENCES users (user_id) on delete cascade,
    friend_id            int REFERENCES users (user_id) on delete cascade,
    friendship_status_id int REFERENCES friendship_status (status_id)
);

create table if not exists likes
(
    like_id        int generated by default as identity primary key,
    film_id        int REFERENCES films (film_id) on delete cascade,
    like_from_user int REFERENCES users (user_id) on delete cascade
);

create table if not exists film_genre_coupling
(
    coupling_id int generated by default as identity primary key,
    film_id     int REFERENCES films (film_id) on delete cascade,
    genre_id    int REFERENCES genre_names (genre_id)
);